/* ===================== insLeftBal ===================== 	Tree out-of-balance to the left. This function 	rotates the tree to the right.	   Pre  The tree is left high 	   Post Balance restored; returns potentially new root*/	NODE* insLeftBal (NODE* root, bool* taller) {//	Local Definitions 	NODE* rightTree;	NODE* leftTree;//	Statements 	leftTree = root->left;	switch (leftTree->bal)	   {	    case LH: // Left High--Rotate Right 	             root->bal     = EH;	             leftTree->bal = EH;	             	             // Rotate Right 	             root     = rotateRight (root);	             *taller  = false;	             break;	    case EH: // This is an error 	             printf ("\n\aError in insLeftBal\n");	             exit (100); 	    case RH: // Right High-Requires double 	             // rotation: first left, then right 	             rightTree = leftTree->right;	             switch (rightTree->bal)	                {	                 case LH: root->bal     = RH;	                          leftTree->bal = EH;	                          break;	                 case EH: root->bal     = EH;	                          leftTree->bal = EH;	                          break;	                 case RH: root->bal     = EH;	                          leftTree->bal = LH;	                          break;	                } // switch rightTree 	             	             rightTree->bal = EH;	             // Rotate Left 	             root->left = rotateLeft (leftTree);	             	             // Rotate Right 	             root     = rotateRight (root);	             *taller  = false;	   } // switch 	return root;}	// insLeftBal 