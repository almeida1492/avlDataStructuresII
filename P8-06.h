/* ===================== rotateLeft ====================== 	Exchanges pointers to rotate the tree to the left.	   Pre  root points to tree to be rotated 	   Post Node rotated and new root returned */NODE* rotateLeft (NODE* root) {//	Local Definitions 	NODE* tempPtr;//	Statements 	tempPtr        = root->right;	root->right    = tempPtr->left;	tempPtr->left  = root;	return tempPtr;}	// rotateLeft /* ================== rotateRight ================== 	Exchange pointers to rotate the tree to the right. 	   Pre  root points to tree to be rotated 	   Post Node rotated and new root returned */NODE* rotateRight (NODE* root) {//	Local Definitions 	NODE* tempPtr;//	Statements 	tempPtr         = root->left;	root->left      = tempPtr->right;	tempPtr->right  = root;	return tempPtr;}	// rotateRight 