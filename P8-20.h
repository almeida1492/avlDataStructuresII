/*	=================== buildList ==================	Reads file and creates AVL tree containing list 	of all words used in the file with count of the	number of times each word is found in the file.	   Pre   wordList has been created	   Post  AVL tree (list) built or error returned*/void buildList (AVL_TREE* wordList){//	Local Definitions 	char  fileName[25];	FILE* fpWords;	bool  success;	DATA* aWord;	DATA  newWord;		//	Statements 	printf("Enter name of file to be processed: ");	scanf ("%24s", fileName);		fpWords = fopen (fileName, "r");	if (!fpWords)	   {	    printf("%-s could not be opened\a\n",fileName);	    printf("Please verify name and try again.\n");	    exit (100);	   } // !fpWords 	while (getWord (&newWord, fpWords))	   {	    aWord = AVL_Retrieve(wordList, &(newWord));	    if (aWord)	       (aWord->count)++;	    else	       {	        aWord = (DATA*) malloc (sizeof (DATA));	        if (!aWord)	           {	            printf("Error 120 in buildList\n");	            exit (120);	           } // if 	        // Add word to list 	        *aWord       = newWord;	        aWord->count = 1;	        success      = AVL_Insert (wordList, aWord);	        if (!success)	           {	            printf("Error 121 in buildList\a\n");	            exit (121);	           } // if overflow test 	       } // else 	   } // while 		printf("End AVL Tree\n");	return;} // buildList 